var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,1.993,1,3.19,2,1.567,3,0.375,4,0.324,5,0.324,6,3.247,7,0.599,8,1.688,9,4.782,10,1.567,11,0.032,12,0.872,13,3.889,14,1.326,15,1.688,16,0.674,17,0.798,18,2.861,19,3.247,20,2.507,21,1.441,22,3.889,23,0.375,24,0.019,25,2.255,26,2.823,27,1.441,28,3.889,29,0.024,30,0.024]],["title/modules/AppModule.html",[31,1.086,32,2.053]],["body/modules/AppModule.html",[1,2.879,2,1.536,3,0.255,4,0.221,5,0.221,11,0.032,16,0.745,17,0.543,18,2.834,19,2.21,23,0.255,24,0.013,29,0.019,30,0.019,31,1.523,32,3.942,33,1.162,34,1.162,35,1.392,36,1.392,37,1.162,38,2.347,39,1.392,40,2.21,41,2.21,42,2.21,43,3.125,44,2.366,45,3.125,46,3.125,47,2.004,48,1.392,49,1.392,50,2.648,51,2.457,52,2.648,53,2.648,54,2.21,55,2.648,56,1.922,57,3.728,58,2.648,59,2.648,60,2.648,61,2.648,62,2.21,63,2.21,64,2.21,65,2.648,66,2.648,67,2.648,68,2.648,69,2.648,70,2.648,71,2.648,72,2.21,73,2.648,74,2.648,75,2.648,76,2.648,77,1.535,78,2.648,79,2.648,80,2.648,81,1.922]],["title/injectables/AppService.html",[18,1.674,82,0.921]],["body/injectables/AppService.html",[3,0.405,4,0.351,5,0.351,7,0.648,8,1.772,9,4.918,11,0.031,12,0.943,14,1.434,15,1.772,16,0.521,17,0.863,18,2.732,23,0.405,24,0.02,27,1.558,29,0.026,30,0.026,82,1.503,83,2.016,84,3.511,85,4.206,86,4.206,87,4.206]],["title/controllers/AuthController.html",[0,1.283,88,2.053]],["body/controllers/AuthController.html",[0,0.837,2,0.837,3,0.2,4,0.173,5,0.39,7,0.32,8,1.086,10,1.747,11,0.032,12,0.973,14,1.479,15,0.709,16,0.656,17,0.427,20,1.34,21,0.77,23,0.2,24,0.01,25,1.205,27,1.607,29,0.016,30,0.016,72,1.735,88,2.052,89,1.735,90,1.509,91,2.079,92,2.509,93,2.809,94,2.658,95,2.658,96,2.658,97,2.079,98,3.87,99,2.079,100,2.079,101,2.079,102,2.079,103,1.747,104,1.06,105,0.96,106,1.479,107,3.414,108,2.079,109,1.735,110,2.514,111,2.079,112,2.079,113,2.079,114,2.079,115,2.079,116,1.735,117,2.514,118,2.079,119,2.079,120,1.509,121,1.735,122,1.509,123,3.184,124,3.184,125,1.735,126,3.184,127,2.034,128,1.735,129,1.735,130,1.735,131,1.205,132,2.079,133,2.079,134,1.735,135,1.735,136,3.184,137,2.079,138,3.184,139,2.079,140,1.509,141,2.079,142,2.079,143,2.079,144,2.658,145,2.079,146,2.28,147,2.079,148,2.079,149,2.658,150,2.079,151,2.079,152,2.311,153,2.658,154,2.079,155,2.079,156,2.079,157,2.079,158,1.34,159,2.079,160,1.509,161,0.837,162,2.079,163,2.079,164,2.079,165,2.079,166,2.079,167,2.079,168,2.079,169,2.079,170,2.079,171,2.079,172,2.079,173,2.079,174,2.079,175,2.079,176,2.079]],["title/classes/AuthGuard.html",[24,0.015,131,1.846]],["body/classes/AuthGuard.html",[3,0.31,4,0.269,5,0.269,7,0.496,8,1.491,11,0.032,12,0.98,14,1.491,16,0.615,17,0.661,23,0.31,24,0.015,27,1.619,29,0.022,30,0.022,77,1.867,103,1.761,104,1.068,105,0.897,106,1.491,131,2.876,177,1.297,178,2.688,179,2.817,180,4.371,181,4.962,182,4.371,183,3.22,184,5.321,185,3.22,186,4.371,187,4.371,188,4.371,189,4.962,190,4.371,191,3.586,192,3.22,193,4.142,194,4.371,195,2.688,196,3.22,197,2.076,198,3.22,199,2.337]],["title/modules/AuthModule.html",[31,1.086,43,1.846]],["body/modules/AuthModule.html",[2,1.673,3,0.288,4,0.249,5,0.249,11,0.032,16,0.727,17,0.614,23,0.288,24,0.014,29,0.021,30,0.021,31,1.628,33,1.312,34,1.312,35,1.572,36,1.572,37,1.312,38,2.509,39,1.572,43,3.496,44,2.461,47,2.183,48,1.572,49,1.572,51,2.678,88,3.077,127,2.948,128,2.496,191,1.927,197,1.927,200,2.496,201,2.99,202,2.496,203,3.251,204,2.99,205,2.99,206,2.171,207,2.99,208,2.171,209,1.733,210,1.733,211,2.171,212,2.99,213,2.99,214,2.99,215,2.99,216,2.171,217,2.99,218,2.99,219,2.496,220,2.99,221,2.171,222,2.171,223,2.99,224,2.496,225,2.496]],["title/injectables/AuthService.html",[82,0.921,127,1.674]],["body/injectables/AuthService.html",[3,0.15,4,0.13,5,0.13,7,0.241,8,0.866,11,0.032,12,0.978,14,1.388,15,1.095,16,0.57,17,0.321,23,0.15,24,0.007,27,1.508,29,0.013,30,0.013,77,2.359,81,2.685,82,0.735,83,0.749,92,2.332,93,3.478,94,2.68,95,2.12,96,2.68,103,1.757,104,1.171,105,0.895,106,1.488,107,2.384,108,1.773,109,2.12,110,2.144,116,2.12,117,2.144,127,1.335,129,1.304,130,1.304,146,2.518,158,2.07,160,2.331,191,2.07,199,2.954,208,1.134,209,0.905,210,0.905,211,1.134,221,1.134,222,1.134,224,1.304,225,1.304,226,1.304,227,2.54,228,2.54,229,1.637,230,1.134,231,1.914,232,4.597,233,1.562,234,2.54,235,1.562,236,1.304,237,1.562,238,2.54,239,2.091,240,1.562,241,2.103,242,1.562,243,2.54,244,1.562,245,2.68,246,1.304,247,1.134,248,2.12,249,2.12,250,3.478,251,4.362,252,3.211,253,2.293,254,2.54,255,2.54,256,1.562,257,1.562,258,1.562,259,2.54,260,1.562,261,1.562,262,2.54,263,1.562,264,3.088,265,2.12,266,2.331,267,1.562,268,1.844,269,2.54,270,2.12,271,2.54,272,1.562,273,1.562,274,1.562,275,3.211,276,1.562,277,1.562,278,1.562,279,1.562,280,1.562,281,2.12,282,2.54,283,1.562,284,1.562,285,1.304,286,0.821,287,1.304,288,2.54,289,1.562,290,1.562,291,1.562,292,1.562,293,1.304]],["title/classes/CreateSchoolDto.html",[24,0.015,294,1.674]],["body/classes/CreateSchoolDto.html",[3,0.309,4,0.268,5,0.268,7,0.494,10,2.14,11,0.031,12,1.191,15,2.034,16,0.54,21,1.189,23,0.309,24,0.021,29,0.022,30,0.022,104,1.211,105,1.09,106,1.954,161,1.756,177,1.292,253,2.603,294,2.292,295,4.638,296,2.329,297,4.952,298,4.952,299,4.36,300,3.208,301,3.208,302,3.208,303,3.208,304,3.208,305,3.208,306,3.165,307,2.527,308,4.435,309,3.221,310,1.686,311,3.221]],["title/classes/CreateTaskDto.html",[24,0.015,312,1.846]],["body/classes/CreateTaskDto.html",[3,0.349,4,0.302,5,0.302,7,0.557,10,1.903,11,0.031,12,1.179,15,1.901,16,0.585,21,1.34,23,0.349,24,0.023,29,0.023,30,0.023,104,1.285,105,1.079,161,1.903,177,1.457,239,2.264,307,3.048,309,3.048,310,1.901,311,3.048,312,2.738,313,4.653,314,2.626,315,2.764,316,3.817,317,3.942,318,3.617,319,3.617,320,3.02]],["title/injectables/JwtStrategy.html",[82,0.921,203,1.846]],["body/injectables/JwtStrategy.html",[3,0.323,4,0.28,5,0.28,7,0.517,8,1.532,11,0.032,12,1.008,14,1.144,16,0.67,17,0.689,23,0.323,24,0.016,27,1.243,29,0.022,30,0.022,82,1.299,83,1.608,92,2.223,103,1.352,104,0.82,105,0.689,106,1.144,108,1.608,179,2.896,197,2.163,203,2.605,209,1.945,210,1.945,211,2.436,216,3.678,219,2.801,222,2.436,229,3.266,236,2.801,241,1.472,253,1.764,321,2.801,322,4.493,323,4.493,324,3.355,325,4.493,326,3.355,327,3.355,328,3.355,329,3.355,330,2.801,331,3.355,332,3.355,333,3.355,334,3.355,335,3.355,336,3.355,337,3.355,338,2.801,339,3.355]],["title/classes/LoginDto.html",[24,0.015,110,1.846]],["body/classes/LoginDto.html",[3,0.36,4,0.312,5,0.312,7,0.576,10,1.944,11,0.031,12,1.082,15,1.925,16,0.598,21,1.386,23,0.36,24,0.023,29,0.024,30,0.024,105,0.99,110,2.798,161,1.944,177,1.507,253,2.809,268,3.879,306,3.503,307,3.097,309,2.798,310,1.966,311,3.097,340,3.122,341,3.741,342,3.741,343,3.122,344,3.741,345,3.122,346,3.122,347,3.122,348,3.122]],["title/modules/PrismaModule.html",[31,1.086,44,1.398]],["body/modules/PrismaModule.html",[3,0.365,4,0.316,5,0.316,11,0.031,16,0.603,17,0.778,23,0.365,24,0.018,29,0.024,30,0.024,31,1.833,33,1.663,34,1.663,35,1.991,36,1.991,37,1.663,38,2.826,39,2.826,44,2.68,47,2.558,48,1.991,49,1.991,231,2.799,349,3.163,350,3.163,351,3.163,352,3.789,353,3.789]],["title/injectables/PrismaService.html",[82,0.921,231,1.398]],["body/injectables/PrismaService.html",[3,0.323,4,0.28,5,0.28,7,0.517,8,1.532,11,0.032,12,1.008,14,1.532,16,0.557,17,0.689,23,0.323,24,0.016,29,0.022,30,0.022,82,1.299,83,1.608,92,2.602,103,1.352,104,0.82,105,0.689,106,1.144,146,2.362,179,2.896,231,1.972,354,2.801,355,5.066,356,4.493,357,5.807,358,4.493,359,5.411,360,3.355,361,2.801,362,3.355,363,2.801,364,3.355,365,3.355,366,3.355,367,3.355,368,4.493,369,3.355,370,4.493,371,3.355]],["title/classes/RegisterDto.html",[24,0.015,117,1.846]],["body/classes/RegisterDto.html",[3,0.337,4,0.292,5,0.292,7,0.539,10,2.085,11,0.031,12,1.161,15,2.005,16,0.573,21,1.297,23,0.337,24,0.022,29,0.023,30,0.023,104,1.265,105,1.062,117,2.68,161,1.862,177,1.411,253,2.72,268,3.757,306,3.356,307,3.191,309,3.191,310,1.841,311,3.191,317,2.923,343,2.923,345,2.923,346,2.923,347,2.923,348,2.923,372,2.923,373,3.502,374,3.502,375,3.502,376,3.502]],["title/classes/School.html",[24,0.015,377,2.312]],["body/classes/School.html",[3,0.46,4,0.398,5,0.398,11,0.029,23,0.46,24,0.023,29,0.028,30,0.028,177,1.924,377,4.073,378,3.987]],["title/controllers/SchoolController.html",[0,1.283,379,2.053]],["body/controllers/SchoolController.html",[0,0.922,2,0.922,3,0.221,4,0.191,5,0.191,7,0.353,8,1.168,10,1.965,11,0.032,12,1.094,14,1.664,15,1.903,16,0.604,17,0.47,20,1.476,21,0.848,23,0.221,24,0.011,25,1.327,26,1.662,27,1.807,29,0.017,30,0.017,90,1.662,92,2.638,103,1.835,104,1.114,105,0.935,106,1.554,108,2.338,120,2.487,122,2.98,140,1.662,146,2.564,152,1.662,241,2.247,294,2.691,379,2.208,380,1.911,381,2.29,382,1.986,383,3.803,384,2.86,385,2.86,386,2.646,387,1.911,388,2.29,389,2.29,390,1.911,391,3.426,392,2.29,393,1.911,394,3.426,395,2.29,396,1.476,397,3.163,398,3.426,399,2.29,400,1.911,401,1.662,402,1.662,403,2.158,404,1.911,405,1.476,406,2.487,407,1.476,408,2.29,409,2.29,410,1.911,411,2.29,412,2.29,413,2.29,414,2.29,415,1.911,416,2.29,417,2.29,418,2.29]],["title/modules/SchoolModule.html",[31,1.086,45,1.846]],["body/modules/SchoolModule.html",[2,1.887,3,0.344,4,0.298,5,0.298,11,0.032,16,0.687,17,0.733,23,0.344,24,0.017,29,0.023,30,0.023,31,1.783,33,1.568,34,1.568,35,1.878,36,1.878,37,1.568,38,2.747,39,1.878,44,2.594,45,3.542,47,2.462,48,1.878,49,1.878,51,3.02,206,2.594,379,3.369,403,3.107,404,2.983,419,2.983,420,3.573,421,2.983,422,3.573,423,3.573]],["title/injectables/SchoolService.html",[82,0.921,403,1.674]],["body/injectables/SchoolService.html",[3,0.225,4,0.195,5,0.195,7,0.36,8,1.187,11,0.032,12,1.157,14,1.679,16,0.57,17,0.48,23,0.225,24,0.011,25,1.355,27,1.823,29,0.017,30,0.017,82,1.006,83,1.121,92,2.647,103,1.983,104,1.203,105,1.01,106,1.679,108,2.359,146,2.587,158,2.243,229,1.507,230,1.697,231,2.264,239,2.689,241,2.264,247,1.697,266,1.697,294,2.712,382,2.017,383,3.843,384,2.905,385,2.905,386,2.243,387,2.905,390,2.905,393,2.905,396,2.243,397,3.183,403,1.829,405,1.507,406,2.526,407,1.507,424,1.952,425,2.338,426,2.338,427,2.338,428,2.338,429,2.338,430,2.338,431,2.338,432,2.338,433,2.338,434,2.338,435,2.338,436,1.952,437,1.952]],["title/interfaces/Task.html",[286,1.674,438,2.053]],["body/interfaces/Task.html",[3,0.316,4,0.274,5,0.274,7,0.505,11,0.031,15,1.967,23,0.426,29,0.022,30,0.022,104,1.441,105,1.028,161,1.783,239,2.401,241,2.587,250,2.381,286,2.633,315,3.099,438,2.114,439,3.28,440,2.381,441,2.114,442,2.381,443,2.738,444,3.636,445,3.694,446,2.738,447,2.738,448,2.738,449,2.738,450,2.738,451,2.738,452,3.694,453,3.694,454,2.738,455,2.738,456,2.738,457,2.738,458,2.738,459,2.738,460,3.694,461,3.694,462,2.738,463,2.738,464,2.738,465,2.738]],["title/controllers/TaskController.html",[0,1.283,466,2.053]],["body/controllers/TaskController.html",[0,0.89,2,0.89,3,0.213,4,0.184,5,0.184,7,0.34,8,1.137,10,1.935,11,0.032,12,1.077,14,1.638,16,0.626,17,0.453,20,1.424,21,0.818,23,0.213,24,0.011,25,1.281,27,1.78,29,0.016,30,0.016,90,1.604,92,2.621,103,1.803,104,1.094,105,0.918,106,1.526,107,3.256,108,2.302,120,2.421,121,1.844,122,2.421,125,1.844,131,1.281,140,1.604,144,1.844,149,3.736,152,1.604,153,4.01,239,2.648,241,2.216,312,2.594,382,1.933,386,2.589,396,1.424,400,1.844,401,1.604,402,2.916,405,1.424,407,1.424,410,1.844,415,1.844,466,2.15,467,1.844,468,2.209,469,3.736,470,1.844,471,2.209,472,2.209,473,1.844,474,2.209,475,2.209,476,1.844,477,2.209,478,2.209,479,2.209,480,2.209,481,2.594,482,2.209,483,2.209,484,4.475,485,2.112,486,1.844,487,2.784,488,2.209,489,2.209,490,2.209,491,2.209,492,2.209,493,2.209,494,2.209,495,2.209,496,2.209,497,2.209,498,2.209,499,2.209,500,2.209]],["title/modules/TaskModule.html",[31,1.086,46,1.846]],["body/modules/TaskModule.html",[2,1.887,3,0.344,4,0.298,5,0.298,11,0.032,16,0.687,17,0.733,23,0.344,24,0.017,29,0.023,30,0.023,31,1.783,33,1.568,34,1.568,35,1.878,36,1.878,37,1.568,38,2.747,39,1.878,44,2.594,46,3.542,47,2.462,48,1.878,49,1.878,51,3.02,206,2.594,466,3.369,485,3.107,486,2.983,501,2.983,502,2.983,503,3.573,504,3.573,505,3.573]],["title/injectables/TaskService.html",[82,0.921,485,1.674]],["body/injectables/TaskService.html",[3,0.163,4,0.141,5,0.141,7,0.26,8,0.922,11,0.032,12,1.013,14,1.444,16,0.525,17,0.346,23,0.163,24,0.008,26,1.225,27,1.569,29,0.013,30,0.013,77,2.455,81,2.809,82,0.782,83,0.809,92,2.483,93,1.225,103,1.706,104,1.105,105,0.869,106,1.444,107,3.364,108,2.03,146,2.226,158,2.913,191,1.088,193,1.409,199,3.074,229,1.743,230,1.225,231,1.983,239,2.502,241,2.34,245,1.409,246,1.409,247,1.225,249,2.257,250,2.809,253,0.887,264,3.535,265,1.409,266,1.225,270,2.824,281,3.23,285,1.409,286,2.803,287,2.824,293,2.257,312,2.243,316,2.809,382,1.568,386,1.743,396,1.743,401,1.225,402,3.074,405,1.088,407,1.088,436,1.409,437,1.409,441,2.181,469,3.23,470,2.257,473,2.257,476,2.257,481,2.243,485,1.779,487,2.257,506,1.409,507,1.688,508,1.688,509,1.688,510,1.688,511,1.688,512,1.688,513,1.688,514,1.409,515,1.688,516,1.688,517,4.235,518,1.688,519,2.704,520,2.704,521,1.688,522,2.704,523,1.688,524,1.688,525,1.688,526,1.688,527,1.688,528,1.688,529,1.688]],["title/classes/UpdateSchoolDto.html",[24,0.015,397,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.421,4,0.365,5,0.365,11,0.031,16,0.66,23,0.421,24,0.021,29,0.026,30,0.026,177,1.762,179,3.431,294,2.298,296,3.174,382,2.535,397,3.085,406,3.174,530,3.65,531,5.323,532,4.373,533,3.65,534,3.65]],["title/classes/UpdateTaskDto.html",[24,0.015,481,1.846]],["body/classes/UpdateTaskDto.html",[3,0.339,4,0.293,5,0.293,7,0.542,10,1.867,11,0.031,12,1.163,15,1.88,16,0.574,21,1.303,23,0.339,24,0.022,29,0.023,30,0.023,104,1.268,105,1.064,106,1.88,161,1.867,177,1.416,239,2.222,307,3.006,308,4.329,309,3.006,310,1.848,311,3.006,314,2.552,315,2.726,316,3.764,320,2.935,481,2.687,535,4.602,536,4.636,537,3.516,538,3.516]],["title/coverage.html",[539,3.149]],["body/coverage.html",[0,2.001,1,1.771,5,0.229,6,2.293,11,0.032,18,1.444,24,0.028,29,0.019,30,0.019,37,1.206,77,1.593,82,1.578,84,2.293,88,1.771,89,2.293,105,0.564,110,1.593,117,1.593,127,1.444,131,1.593,178,2.293,203,1.593,209,1.593,210,1.593,226,2.293,231,1.206,286,1.444,294,1.444,295,2.293,296,2.841,312,1.593,313,2.293,314,2.841,321,2.293,340,2.293,354,2.293,372,2.293,377,1.994,378,2.293,379,1.771,380,2.293,397,1.593,403,1.444,424,2.293,438,1.771,440,2.841,441,1.771,466,1.771,467,2.293,481,1.593,485,1.444,506,2.293,530,2.293,535,2.293,539,1.994,540,2.747,541,2.747,542,2.747,543,6.354,544,3.914,545,3.914,546,4.968,547,3.914,548,4.968,549,2.293,550,3.914,551,5.251,552,2.293,553,2.747,554,3.914,555,2.747,556,2.747,557,2.747,558,2.747]],["title/dependencies.html",[34,1.68,559,2.224]],["body/dependencies.html",[11,0.032,17,0.719,21,1.297,24,0.022,29,0.023,30,0.023,34,1.537,54,2.923,56,2.542,57,3.859,62,2.923,63,2.923,134,2.923,135,3.859,195,2.923,197,2.257,208,2.542,216,2.542,248,2.923,310,1.841,330,3.859,363,2.923,514,2.923,533,2.923,534,2.923,560,5.176,561,3.502,562,3.502,563,3.502,564,3.502,565,3.502,566,3.502,567,3.502,568,3.502,569,3.502,570,3.502,571,3.502,572,3.502,573,3.502,574,3.502,575,3.502,576,3.502,577,3.502,578,3.502,579,3.502,580,3.502,581,3.502,582,3.502,583,3.502,584,3.502,585,3.502]],["title/miscellaneous/functions.html",[586,1.717,587,3.196]],["body/miscellaneous/functions.html",[7,0.744,11,0.028,29,0.028,30,0.028,37,2.627,552,4.031,586,3.113,587,4.031,588,4.829]],["title/index.html",[7,0.41,589,2.665,590,2.665]],["body/index.html",[4,0.273,11,0.031,29,0.022,30,0.022,56,3.629,64,2.728,315,1.718,361,2.728,444,2.372,539,2.372,591,3.268,592,3.268,593,4.415,594,3.268,595,3.268,596,3.268,597,3.268,598,3.268,599,3.268,600,3.268,601,3.268,602,3.268,603,3.268,604,4.999,605,5.891,606,3.268,607,3.268,608,5.762,609,3.268,610,3.268,611,4.415,612,3.268,613,3.268,614,3.268,615,3.268,616,4.415,617,4.415,618,3.268,619,3.268,620,3.268,621,4.415,622,4.415,623,3.268,624,3.268,625,3.268,626,3.268,627,2.728,628,3.268,629,3.268,630,3.268,631,3.268,632,3.268,633,3.268,634,3.268,635,3.268,636,3.268,637,2.728,638,3.268,639,3.268,640,3.268,641,3.268,642,3.268,643,3.268,644,2.728]],["title/modules.html",[33,1.904]],["body/modules.html",[11,0.026,29,0.026,30,0.026,32,2.833,33,1.928,43,2.547,44,1.928,45,2.547,46,2.547,627,5.116,645,6.129,646,6.129,647,6.129]],["title/overview.html",[648,3.622]],["body/overview.html",[2,1.23,11,0.031,18,2.536,29,0.021,30,0.021,31,1.041,32,3.976,33,1.34,34,1.34,35,1.604,36,1.604,37,1.34,38,1.604,39,1.604,40,2.548,41,2.548,42,2.548,43,3.469,44,2.626,45,3.354,46,3.354,47,2.215,48,1.604,49,1.604,83,1.463,127,2.536,177,1.23,200,2.548,202,2.548,203,2.797,231,2.539,349,2.548,350,2.548,351,2.548,403,2.536,419,2.548,421,2.548,438,1.968,442,2.216,485,2.536,501,2.548,502,2.548,648,2.548,649,3.052,650,3.052,651,3.052,652,3.052]],["title/properties.html",[161,1.542,559,2.224]],["body/properties.html",[11,0.031,29,0.028,30,0.028,161,1.914,315,2.497,637,3.966,644,3.966,653,4.751,654,4.751,655,4.751]],["title/miscellaneous/variables.html",[586,1.717,656,3.196]],["body/miscellaneous/variables.html",[7,0.535,11,0.032,29,0.023,30,0.023,104,1.26,105,0.944,160,2.522,209,2.666,210,2.014,221,2.522,241,2.262,286,1.826,315,2.71,338,2.9,440,2.522,441,2.965,442,2.522,443,2.9,444,3.742,445,3.839,446,2.9,447,2.9,448,2.9,449,2.9,450,2.9,451,2.9,452,3.839,453,3.839,454,2.9,455,2.9,456,2.9,457,2.9,458,2.9,459,2.9,460,3.839,461,3.839,462,2.9,463,2.9,464,2.9,465,2.9,549,3.839,586,2.24,656,2.9,657,3.475,658,3.475,659,4.599,660,4.599,661,3.475,662,3.475]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":654,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":442,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.3.2",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["14",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":451,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":458,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3.13.0",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["3.22.4",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":650,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":649,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":651,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":652,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["according",{"_index":463,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":297,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["already",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":628,"title":{},"body":{"index.html":{}}}],["api/auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/schools",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{}}}],["api/tasks",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["apibearerauth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["apibearerauth('accesstoken",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('/profile')@httpcode(200",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":311,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":341,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnotempty()@isemail()@isstring",{"_index":373,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":317,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":343,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":303,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":299,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["apiproperty()@isstring()@isoptional()@isemail",{"_index":301,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["apiproperty()@isstring()@isoptional()@isnotempty",{"_index":536,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["apitags",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["apitags('auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('root",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('school",{"_index":408,"title":{},"body":{"controllers/SchoolController.html":{}}}],["apitags('tasks",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{}}}],["app",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":371,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":599,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asdf;lkj",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth.controller",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":88,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":131,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":196,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":180,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":637,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":127,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(request",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":629,"title":{},"body":{"index.html":{}}}],["bad",{"_index":520,"title":{},"body":{"injectables/TaskService.html":{}}}],["bcrypt",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(request.password",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["beforeexit",{"_index":368,"title":{},"body":{"injectables/PrismaService.html":{}}}],["berhasil",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["boolean",{"_index":187,"title":{},"body":{"classes/AuthGuard.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":647,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":645,"title":{},"body":{"modules.html":{}}}],["building",{"_index":594,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":181,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":183,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch((err",{"_index":529,"title":{},"body":{"injectables/TaskService.html":{}}}],["cb",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":24,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":177,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["client",{"_index":453,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":349,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":350,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":351,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":419,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":420,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":421,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":501,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":503,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":502,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["complete",{"_index":443,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["conduct",{"_index":455,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["config.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(file",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["const",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prismaservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":186,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('/api/schools",{"_index":409,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('/api/tasks",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('api/auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["cookie",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":539,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":382,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":410,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["create(createschooldto",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["create(request",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createschooldto",{"_index":294,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtaskdto",{"_index":312,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["debug",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:id",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{}}}],["delete(@param('id",{"_index":499,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(id",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deleted",{"_index":436,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":315,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["develop",{"_index":459,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":607,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":456,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["document",{"_index":448,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":405,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":407,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":618,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":595,"title":{},"body":{"index.html":{}}}],["email",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":449,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":193,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/TaskService.html":{}}}],["event",{"_index":367,"title":{},"body":{"injectables/PrismaService.html":{}}}],["example",{"_index":604,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":184,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":179,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["feature",{"_index":460,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.originalname",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":413,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["found",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["framework",{"_index":593,"title":{},"body":{"index.html":{}}}],["function",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":587,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('/profile",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(@param('id",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":589,"title":{"index.html":{}},"body":{}}],["grow",{"_index":624,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":182,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":190,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":634,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["httpcode(200",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["httpcode(201",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["httpexception",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpexception('bad",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('request",{"_index":519,"title":{},"body":{"injectables/TaskService.html":{}}}],["httpexception('task",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["httpexception('tasks",{"_index":525,"title":{},"body":{"injectables/TaskService.html":{}}}],["httpexception('user",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":641,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.created",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.found",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.ok",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.unauthorized",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implement",{"_index":462,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":603,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":606,"title":{},"body":{"index.html":{}}}],["interface",{"_index":438,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":439,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":306,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":307,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional",{"_index":308,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":309,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["join",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.expired",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtconfig.secret",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":203,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":638,"title":{},"body":{"index.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["level",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":644,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":622,"title":{},"body":{"index.html":{}}}],["listener",{"_index":369,"title":{},"body":{"injectables/PrismaService.html":{}}}],["login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(request",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":110,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":345,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":348,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["meeting",{"_index":452,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":527,"title":{},"body":{"injectables/TaskService.html":{}}}],["message",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":346,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":347,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":586,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":621,"title":{},"body":{"index.html":{}}}],["mode",{"_index":611,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":633,"title":{},"body":{"index.html":{}}}],["multer",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["mustache",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":639,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":643,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":533,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":197,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["new",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["node.js",{"_index":592,"title":{},"body":{"index.html":{}}}],["npm",{"_index":605,"title":{},"body":{"index.html":{}}}],["number",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":189,"title":{},"body":{"classes/AuthGuard.html":{}}}],["onmoduleinit",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":623,"title":{},"body":{"index.html":{}}}],["optional",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":648,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":559,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":401,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["param('id",{"_index":415,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["parseintpipe",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["parser",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":532,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":531,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:id",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload?.email",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload?.exp",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload?.sub",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":298,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":631,"title":{},"body":{"index.html":{}}}],["post",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('/avatar",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login')@httpcode(200",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@httpcode(201",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma.service",{"_index":353,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":44,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":231,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":613,"title":{},"body":{"index.html":{}}}],["profile",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(id",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile(request",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":591,"title":{},"body":{"index.html":{}}}],["project",{"_index":444,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":188,"title":{},"body":{"classes/AuthGuard.html":{}}}],["properties",{"_index":161,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["proposal",{"_index":445,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":465,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":632,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{},"injectables/TaskService.html":{}}}],["reflect",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(request",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":117,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":602,"title":{},"body":{"index.html":{}}}],["req",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["request.email",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.user_id",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["request?.user?.id",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["requirements",{"_index":457,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":608,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"classes/AuthGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":596,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":454,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":377,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"coverage.html":{}}}],["school.controller",{"_index":423,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":406,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:14",{"_index":302,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:19",{"_index":300,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:24",{"_index":305,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:8",{"_index":304,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":404,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["schoolcontroller",{"_index":379,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":45,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":403,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["search",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["secret",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":597,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":598,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["specifications",{"_index":464,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":626,"title":{},"body":{"index.html":{}}}],["src/.../jwt",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:71",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":178,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:12",{"_index":192,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:6",{"_index":185,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:107",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:77",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":340,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":342,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":344,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":372,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:14",{"_index":375,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:20",{"_index":374,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:27",{"_index":376,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":352,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":295,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":530,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":378,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:22",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:27",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:32",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:37",{"_index":399,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:45",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":422,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":424,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:16",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:20",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:28",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:37",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":425,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/tasks.ts",{"_index":440,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":313,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":535,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:28",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:35",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:42",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:49",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:59",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":504,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:14",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:30",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:46",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:73",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:8",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:98",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":609,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":612,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":614,"title":{},"body":{"index.html":{}}}],["started",{"_index":590,"title":{"index.html":{}},"body":{}}],["starter",{"_index":601,"title":{},"body":{"index.html":{}}}],["statements",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":635,"title":{},"body":{"index.html":{}}}],["storage",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":447,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["successfull",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":437,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["super",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":198,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":627,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":646,"title":{},"body":{"modules.html":{}}}],["table",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":286,"title":{"interfaces/Task.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":505,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":314,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:13",{"_index":318,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:15",{"_index":320,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:17",{"_index":538,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:8",{"_index":319,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":537,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["taskcontroller",{"_index":466,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":46,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":441,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":485,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":617,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":620,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":619,"title":{},"body":{"index.html":{}}}],["tests",{"_index":616,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":625,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":365,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on",{"_index":366,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(request",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(request?.user?.id",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(request",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.school.create",{"_index":431,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prismaservice.school.delete",{"_index":435,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prismaservice.school.findfirst",{"_index":433,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prismaservice.school.findmany",{"_index":432,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prismaservice.school.update",{"_index":434,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prismaservice.task",{"_index":528,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prismaservice.task.create",{"_index":518,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prismaservice.task.findfirst",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prismaservice.task.findmany",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prismaservice.task.update",{"_index":526,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prismaservice.user.create",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.user.findfirst",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.user.findunique",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.user.update",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request?.user?.id",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":412,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":414,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.create(request",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.delete(id",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.get(id",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.search",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.update(id",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":199,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["touch",{"_index":636,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":642,"title":{},"body":{"index.html":{}}}],["type",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":534,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":600,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":194,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('/avatar')@httpcode(201",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":615,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":655,"title":{},"body":{"properties.html":{}}}],["update",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["update(id",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updateavatar",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateavatar.avatar",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateschooldto",{"_index":397,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskdto",{"_index":481,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(id",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image/${file.filename",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:id')@httpcode(200",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:id')@httpcode(200",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get()@httpcode(200",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:id')@httpcode(200",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post()@httpcode(201",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":191,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["user_id",{"_index":316,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["validate",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":310,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":656,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":653,"title":{},"body":{"properties.html":{}}}],["void",{"_index":370,"title":{},"body":{"injectables/PrismaService.html":{}}}],["watch",{"_index":610,"title":{},"body":{"index.html":{}}}],["website",{"_index":640,"title":{},"body":{"index.html":{}}}],["week",{"_index":450,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["winston",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["winston.format.json",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":446,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["wrong",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["xyz",{"_index":461,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":630,"title":{},"body":{"index.html":{}}}],["zod",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Root')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { WinstonModule } from 'nest-winston';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport * as winston from 'winston';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    WinstonModule.forRoot({\n      format: winston.format.json(),\n      level: 'debug',\n      transports: [new winston.transports.Console()],\n    }),\n    ConfigModule.forRoot({ isGlobal: true }),\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(request, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('/avatar')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(request: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('/profile')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(request: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBody, ApiConsumes, ApiTags, ApiBearerAuth } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('api/auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('/register')\n  @HttpCode(201)\n  async register(@Body() request: RegisterDto) {\n    return await this.authService.register(request);\n  }\n\n  @Post('/login')\n  @HttpCode(200)\n  async login(@Body() request: LoginDto) {\n    return await this.authService.login(request);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @Get('/profile')\n  @HttpCode(200)\n  async profile(@Req() request) {\n    return await this.authService.profile(request?.user?.id);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('/avatar')\n  @HttpCode(201)\n  async avatar(@Req() request, @UploadedFile() file: Express.Multer.File) {\n    console.log(file);\n    return await this.authService.uploadAvatar(\n      request?.user?.id,\n      `/uploads/image/${file.filename}`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConfig } from 'src/config/jwt-config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwtConfig.secret,\n      signOptions: {\n        expiresIn: jwtConfig.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(request: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(request: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(id: number, avatar: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport * as bcrypt from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwtConfig } from 'src/config/jwt-config';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prismaService: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(request: RegisterDto) {\n    const checkUserExists = await this.prismaService.user.findFirst({\n      where: {\n        email: request.email,\n      },\n    });\n\n    if (checkUserExists) {\n      throw new HttpException('User already registered', HttpStatus.FOUND);\n    }\n    request.password = await bcrypt.hash(request.password, 12);\n    const createUser = await this.prismaService.user.create({\n      data: request,\n    });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.CREATED,\n        message: 'Register Successfull',\n      };\n    }\n  }\n\n  async login(request: LoginDto) {\n    const checkUserExists = await this.prismaService.user.findFirst({\n      where: {\n        email: request.email,\n      },\n    });\n\n    if (!checkUserExists) {\n      throw new HttpException(\n        'Email or password is wrong!',\n        HttpStatus.NOT_FOUND,\n      );\n    }\n\n    const checkPassword = await bcrypt.compare(\n      request.password,\n      checkUserExists.password,\n    );\n\n    if (!checkPassword) {\n      throw new HttpException(\n        'Email or password is wrong!',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n    const accessToken = this.generateJWT({\n      sub: checkUserExists.id,\n      name: checkUserExists.name,\n      email: checkUserExists.email,\n    });\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Login Berhasil',\n      accessToken: accessToken,\n    };\n  }\n\n  generateJWT(payload: object) {\n    return this.jwtService.sign(payload, {\n      secret: jwtConfig.secret,\n      expiresIn: jwtConfig.expired,\n    });\n  }\n\n  async profile(id: number) {\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        id: id,\n      },\n      select: {\n        name: true,\n        email: true,\n        avatar: true,\n        Task: true,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found!', HttpStatus.NOT_FOUND);\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: user,\n    };\n  }\n\n  async uploadAvatar(id: number, avatar: string) {\n    const checkUserExists = await this.prismaService.user.findFirst({\n      where: {\n        id: id,\n      },\n    });\n\n    if (checkUserExists) {\n      const updateAvatar = await this.prismaService.user.update({\n        where: {\n          id: id,\n        },\n        data: {\n          avatar: avatar,\n        },\n      });\n      if (updateAvatar) {\n        return {\n          statusCode: HttpStatus.CREATED,\n          message: 'Upload avatar berhasil',\n          avatar: updateAvatar.avatar,\n        };\n      }\n    }\n\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateSchoolDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTaskDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConfig } from 'src/config/jwt-config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConfig.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload?.sub,\n      email: payload?.email,\n      expired: payload?.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    (this.$on as (event: 'beforeExit', listener: () => void) => void)(\n      'beforeExit',\n      async () => {\n        await app.close();\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  @IsString()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api/schools\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('School')\n@ApiBearerAuth('accessToken')\n@Controller('/api/schools')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateSchoolDto: UpdateSchoolDto,\n  ) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prismaService: PrismaService) {}\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    return await this.prismaService.school.create({\n      data: createSchoolDto,\n    });\n  }\n\n  async findAll() {\n    return await this.prismaService.school.findMany({});\n  }\n\n  async findOne(id: number) {\n    return await this.prismaService.school.findFirst({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    return await this.prismaService.school.update({\n      where: {\n        id,\n      },\n      data: updateSchoolDto,\n    });\n  }\n\n  async remove(id: number) {\n    await this.prismaService.school.delete({\n      where: {\n        id,\n      },\n    });\n\n    return {\n      message: 'Deleted successfully!',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/tasks.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: number;\n  name: string;\n  description: string;\n}\n\nexport const tasks: Task[] = [\n  {\n    id: 1,\n    name: 'Complete project proposal',\n    description:\n      'Write and submit project proposal document by end of the week.',\n  },\n  {\n    id: 2,\n    name: 'Meeting with client',\n    description:\n      'Schedule and conduct a meeting with the client to discuss project requirements.',\n  },\n  {\n    id: 3,\n    name: 'Develop feature XYZ',\n    description:\n      'Implement feature XYZ according to the specifications provided.',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api/tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(request: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, request: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\nimport { ApiTags, ApiBearerAuth } from '@nestjs/swagger';\n\n@ApiTags('Tasks')\n@ApiBearerAuth('accessToken')\n@Controller('/api/tasks')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @Post()\n  @HttpCode(201)\n  async create(@Body() request: CreateTaskDto) {\n    return this.taskService.create(request);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:id')\n  @HttpCode(200)\n  async get(@Param('id', ParseIntPipe) id: number) {\n    return this.taskService.get(id);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  @HttpCode(200)\n  async search() {\n    return this.taskService.search();\n  }\n\n  @UseGuards(AuthGuard)\n  @Patch('/:id')\n  @HttpCode(200)\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() request: UpdateTaskDto,\n  ) {\n    return this.taskService.update(id, request);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:id')\n  @HttpCode(200)\n  async delete(@Param('id', ParseIntPipe) id: number) {\n    return this.taskService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, request: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(request: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Delete Task\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, request: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private readonly prismaService: PrismaService,\n    @Inject(REQUEST) private request: any,\n  ) {}\n\n  async create(request: CreateTaskDto) {\n    request.user_id = this.request?.user?.id;\n    const task = await this.prismaService.task.create({\n      data: request,\n    });\n\n    if (!task) {\n      throw new HttpException('Request is bad', HttpStatus.BAD_REQUEST);\n    }\n\n    return {\n      statusCode: HttpStatus.CREATED,\n      data: task,\n    };\n  }\n\n  async get(id: number) {\n    const task = await this.prismaService.task.findFirst({\n      where: {\n        id: id,\n        user_id: this.request?.user?.id,\n      },\n    });\n    if (!task) {\n      throw new HttpException('Task is not found!', HttpStatus.NOT_FOUND);\n    }\n    return {\n      statusCode: HttpStatus.OK,\n      data: task,\n    };\n  }\n\n  async search() {\n    const tasks = await this.prismaService.task.findMany({\n      where: {\n        user_id: this.request?.user?.id,\n      },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            avatar: true,\n          },\n        },\n      },\n    });\n\n    if (!tasks) {\n      throw new HttpException('Tasks are not found!', HttpStatus.NOT_FOUND);\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: tasks,\n    };\n  }\n\n  async update(id: number, request: UpdateTaskDto) {\n    const task = await this.prismaService.task.update({\n      where: {\n        id: id,\n        user_id: this.request?.user?.id,\n      },\n      data: request,\n    });\n\n    if (!task) {\n      throw new HttpException('Request is bad', HttpStatus.BAD_REQUEST);\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: task,\n    };\n  }\n\n  /**\n   *Delete Task\n   *\n   * @param {number} id\n   * @memberof TaskService\n   */\n  async delete(id: number) {\n    await this.prismaService.task\n      .delete({\n        where: {\n          id: id,\n          user_id: this.request?.user?.id,\n        },\n      })\n      .catch((err) => {\n        if (err) {\n          throw new HttpException('Task is not found', HttpStatus.NOT_FOUND);\n        }\n      });\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Deleted successfully',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateTaskDto {\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  @IsNotEmpty()\n  name?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  @IsNotEmpty()\n  description?: string;\n\n  user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt-config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                14 %\n                (1/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.12.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            mustache-express : ^1.3.2\n        \n            nest-winston : ^1.9.4\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            winston : ^3.13.0\n        \n            zod : ^3.22.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConfig   (src/.../jwt-config.ts)\n                        \n                        \n                            tasks   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'asdf;lkj',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/tasks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    name: 'Complete project proposal',\n    description:\n      'Write and submit project proposal document by end of the week.',\n  },\n  {\n    id: 2,\n    name: 'Meeting with client',\n    description:\n      'Schedule and conduct a meeting with the client to discuss project requirements.',\n  },\n  {\n    id: 3,\n    name: 'Develop feature XYZ',\n    description:\n      'Implement feature XYZ according to the specifications provided.',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
